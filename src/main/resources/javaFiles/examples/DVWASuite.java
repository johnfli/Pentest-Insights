// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DVWASuiteNewTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void login() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).sendKeys("admin");
    driver.findElement(By.name("password")).sendKeys("password");
    driver.findElement(By.name("Login")).click();
    assertThat(driver.getTitle(), is("Welcome :: Damn Vulnerable Web Application (DVWA) v1.10 *Development*"));
  }
  @Test
  public void sQLInjection() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("SQL Injection")).click();
    driver.findElement(By.name("id")).click();
    driver.findElement(By.name("id")).sendKeys("1");
    driver.findElement(By.name("Submit")).click();
    driver.findElement(By.name("id")).click();
    driver.findElement(By.name("id")).sendKeys("3");
    driver.findElement(By.name("Submit")).click();
    driver.close();
  }
  @Test
  public void weakSessionIDs() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("Weak Session IDs")).click();
    driver.findElement(By.cssSelector("form > input")).click();
    driver.findElement(By.cssSelector("form > input")).click();
    driver.close();
  }
  @Test
  public void xSSDOM() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("XSS (DOM)")).click();
    driver.findElement(By.cssSelector("form > input")).click();
    driver.findElement(By.cssSelector(".vulnerable_code_area")).click();
    driver.findElement(By.name("default")).click();
    {
      WebElement dropdown = driver.findElement(By.name("default"));
      dropdown.findElement(By.xpath("//option[. = 'French']")).click();
    }
    driver.findElement(By.name("default")).click();
    driver.findElement(By.cssSelector("form > input")).click();
    driver.findElement(By.name("default")).click();
    {
      WebElement dropdown = driver.findElement(By.name("default"));
      dropdown.findElement(By.xpath("//option[. = 'German']")).click();
    }
    driver.findElement(By.name("default")).click();
    driver.findElement(By.cssSelector("form > input")).click();
    driver.close();
  }
  @Test
  public void xSSReflected() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("XSS (Reflected)")).click();
    driver.findElement(By.name("name")).click();
    driver.findElement(By.name("name")).sendKeys("john");
    driver.findElement(By.name("name")).sendKeys(Keys.ENTER);
    assertThat(driver.findElement(By.cssSelector("pre")).getText(), is("Hello john"));
    driver.close();
  }
  @Test
  public void xSSStored() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("XSS (Stored)")).click();
    driver.findElement(By.name("txtName")).click();
    driver.findElement(By.name("txtName")).sendKeys("John Fli");
    driver.findElement(By.name("mtxMessage")).sendKeys("This is a test comment by John Fli");
    driver.findElement(By.name("btnSign")).click();
    driver.close();
  }
  @Test
  public void logout() {
    driver.get("http://localhost/");
    driver.manage().window().setSize(new Dimension(1020, 743));
    driver.findElement(By.linkText("Logout")).click();
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("img"));
      assert(elements.size() > 0);
    }
    driver.close();
  }
}
