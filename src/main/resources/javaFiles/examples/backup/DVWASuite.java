// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DVWASuiteTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void login() {
    driver.get("http://192.168.60.128/dvwa/");
    driver.manage().window().setSize(new Dimension(970, 576));
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).sendKeys("admin");
    driver.findElement(By.name("password")).sendKeys("password");
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    assertThat(driver.getTitle(), is("Damn Vulnerable Web App (DVWA) v1.8 :: Welcome"));
    driver.close();
  }
  @Test
  public void sQLi() {
    driver.get("http://192.168.60.128/dvwa/");
    driver.manage().window().setSize(new Dimension(970, 576));
    driver.findElement(By.linkText("SQL Injection")).click();
    driver.findElement(By.name("id")).click();
    driver.findElement(By.name("id")).sendKeys("1");
    driver.findElement(By.name("id")).sendKeys(Keys.ENTER);
    assertThat(driver.findElement(By.cssSelector("pre")).getText(), is("ID: 1"));
    driver.findElement(By.name("id")).click();
    driver.findElement(By.name("id")).sendKeys("3");
    driver.findElement(By.name("id")).sendKeys(Keys.ENTER);
    assertThat(driver.findElement(By.cssSelector("pre")).getText(), is("ID: 3"));
    driver.close();
  }
  @Test
  public void xSSReflected() {
    driver.get("http://192.168.60.128/dvwa/");
    driver.manage().window().setSize(new Dimension(970, 576));
    driver.findElement(By.linkText("XSS reflected")).click();
    driver.findElement(By.name("name")).click();
    driver.findElement(By.name("name")).sendKeys("john");
    driver.findElement(By.cssSelector("input:nth-child(3)")).click();
    assertThat(driver.findElement(By.cssSelector("pre")).getText(), is("Hello john"));
    driver.close();
  }
  @Test
  public void xSSStored() {
    driver.get("http://192.168.60.128/dvwa/");
    driver.manage().window().setSize(new Dimension(970, 576));
    driver.findElement(By.linkText("XSS stored")).click();
    driver.findElement(By.name("txtName")).click();
    driver.findElement(By.name("txtName")).sendKeys("User");
    driver.findElement(By.name("mtxMessage")).sendKeys("A random message");
    driver.findElement(By.name("btnSign")).click();
    driver.close();
  }
  @Test
  public void logout() {
    driver.get("http://192.168.60.128/dvwa/");
    driver.manage().window().setSize(new Dimension(970, 576));
    driver.findElement(By.linkText("Logout")).click();
    driver.close();
  }
}
