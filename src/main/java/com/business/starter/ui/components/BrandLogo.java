package com.business.starter.ui.components;

import com.business.starter.ui.util.UIUtils;
import com.vaadin.flow.component.Component;
import com.vaadin.flow.component.dependency.CssImport;
import com.vaadin.flow.component.dependency.StyleSheet;
import com.vaadin.flow.component.html.Div;
import com.vaadin.flow.component.html.Image;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;

@CssImport("./styles/components/brand-expression.css")
@StyleSheet("https://fonts.googleapis.com/css?family=Orbitron:400,500,700,900&display=swap")
@StyleSheet("https://fonts.googleapis.com/css?family=Comfortaa&display=swap")
public class BrandLogo extends Div {

    private String CLASS_NAME = "brand-expression";

    private Image logo;
    private Label title;
    private Label slogan;
    private  boolean vertical;

    private String titleSize;
    private Integer sloganSize;
    private Integer logoSize;

    public BrandLogo(String title, String slogan, boolean isVertical) {

        this.vertical = isVertical;
        this.titleSize = "40";
        this.sloganSize = Integer.parseInt(this.titleSize)/2;

        if(this.vertical) {
            this.logoSize = 5*Integer.parseInt(this.titleSize) + 10;
        } else {
            this.logoSize = 3*Integer.parseInt(this.titleSize) + 10;
        }

        logo = new Image(UIUtils.IMG_PATH + "logos/logo-2.png", "Pentest Insights Logo");
        logo.setHeight(logoSize.toString() + "px");
        logo.setClassName(CLASS_NAME + "__logo");

        /*
         * Thanks to this guy we can have a fluid representation of the logo on any display size:
         * https://css-tricks.com/books/fundamental-css-tactics/scale-typography-screen-size/
         *
         * font-size: calc(14px + (26 - 14) * ((100vw - 300px) / (1600 - 300)));
         * line-height: calc(1.3em + (1.5 - 1.2) * ((100vw - 300px)/(1600 - 300)));
         *
         */

        this.title = UIUtils.createH3Label(title);
        this.title.getStyle().set("font-size", "calc(16px + (" + this.titleSize +
                                    " - 14) * ((100vw - 300px) / (1600 - 300)))");
        this.title.getStyle().set("line-height", "calc(1.3em + (1.5 - 1.2) * ((100vw - 300px)/(1600 - 300)))");
        this.title.getStyle().set("font-family", "'Orbitron', sans-serif");
        this.title.getStyle().set("font-weight", "900");

        this.slogan = UIUtils.createH6Label(slogan);
        this.slogan.getStyle().set("font-size", "calc(8px + (" + this.sloganSize +
                                    " - 7) * ((100vw - 300px) / (1600 - 300)))");
        this.title.getStyle().set("line-height", "calc(1.3em + (1.5 - 1.2) * ((100vw - 300px)/(1600 - 300)))");
        this.slogan.getStyle().set("font-family", "'Comfortaa', cursive");

        VerticalLayout brandText = new VerticalLayout();
        brandText.setPadding(false);
        brandText.setSpacing(false);
        brandText.setJustifyContentMode(FlexComponent.JustifyContentMode.CENTER);
        if(this.vertical)
            brandText.setAlignSelf(FlexComponent.Alignment.CENTER, this.title);
        else
            brandText.setAlignSelf(FlexComponent.Alignment.START, this.title);
        brandText.setAlignSelf(FlexComponent.Alignment.CENTER, this.slogan);
        brandText.addClassName(CLASS_NAME + "__title");
        brandText.add(
                this.title,
                this.slogan
        );

        if(this.vertical) {
            VerticalLayout verticalLayout = new VerticalLayout(logo, brandText);
            verticalLayout.setJustifyContentMode(FlexComponent.JustifyContentMode.CENTER);
            verticalLayout.setDefaultHorizontalComponentAlignment(FlexComponent.Alignment.CENTER);
            add(verticalLayout);
        } else
            add(new HorizontalLayout(logo, brandText));
    }

}
