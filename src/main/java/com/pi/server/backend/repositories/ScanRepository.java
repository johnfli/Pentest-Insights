package com.pi.server.backend.repositories;


import com.pi.server.backend.entities.Scan;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;

public interface ScanRepository extends JpaRepository<Scan, Long> {

    Scan findById(long id);
    Scan findByIdAndUserId(long id, long userId);

    List<Scan> findByUserId(long userId);

    @Query("select u FROM Scan u " +
            "where (u.userId = :userId) and (lower(u.javaFilePath) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.javaFileName) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.browserType) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.headlessMode) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.zapOptions) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.status) like lower(concat('%', :searchTerm, '%')))")
    List<Scan> searchByUserId(@Param("userId") long userId, @Param("searchTerm") String searchTerm);

    @Query("select u FROM Scan u " +
            "where lower(u.javaFilePath) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.javaFileName) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.browserType) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.headlessMode) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.zapOptions) like lower(concat('%', :searchTerm, '%')) " +
            "or lower(u.status) like lower(concat('%', :searchTerm, '%'))")
    List<Scan> search(@Param("searchTerm") String searchTerm);

    @Query("select u FROM Scan u " +
            "where (u.userId = :userId) and (u.zapOptions = :zapOptions) and (u.id < :id) " +
            "and (u.status = 'FINISHED')")
    List<Scan> findPreviousScanByIdAndUserId(long id, long userId, String zapOptions);
}
