###################################################################
########################   S T A G E   1   ########################
###################################################################
####################   M A V E N   B U I L D   ####################
###################################################################
# Use a maven 3.6.3 with Java JDK 11 as the parent image
FROM maven:3.6.3-adoptopenjdk-11 AS MAVEN_BUILD
# Developer Info
MAINTAINER Ioannis Flionis <iflionis@auth.gr># Update
RUN apt-get update
# Install curl
RUN apt-get install curl
# Install NodeJs v.12
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash
RUN apt-get install -y nodejs
# Confirm that it was successful
RUN node -v && npm -v
# npm should have been installed automatically
WORKDIR /pentest-insights
# Copy the code to the container
COPY . /pentest-insights
# Package application code
RUN mvn clean package -Pproduction
####################################################################
#########################   S T A G E   2   ########################
####################################################################
######################   D E P L O Y   A P P   #####################
####################################################################
# Use open jdk 13 as the parent image
FROM openjdk:13.0.2-jdk-buster AS DEPLOY_APP
# Developer Info
MAINTAINER Ioannis Flionis <iflionis@auth.gr>
# Update
RUN apt-get update
# Change working directory to "pentest-insights"
WORKDIR /pentest-insights
# Copy only the artifacts we need from the previous stage and discard the rest
COPY --from=MAVEN_BUILD ./pentest-insights/security-project /pentest-insights/security-project
COPY --from=MAVEN_BUILD ./pentest-insights/src/main/resources /pentest-insights/src/main/resources
COPY --from=MAVEN_BUILD ./pentest-insights/src/main/webapp /pentest-insights/src/main/webapp
COPY --from=MAVEN_BUILD ./pentest-insights/target/pentest-insights-2.0-SNAPSHOT.jar /pentest-insights/pentest-insights.jar
# NOTE: If the developer wants to build the project locally (instructing an "mvn clean package -Pproduction" command
# through his OS terminal) and go straight to deploying the app on Docker, he/she can comment out the whole Stage 1,
# as well as the above this comment four lines of code (the ones with --from=MAVEN_BUILD) and uncomment the next four
# lines of code. This would speed-up the deploy process.
# COPY ./security-project /pentest-insights/security-project
# COPY ./src/main/resources /pentest-insights/src/main/resources
# COPY ./src/main/webapp /pentest-insights/src/main/webapp
# COPY ./target/pentest-insights-2.0-SNAPSHOT.jar /pentest-insights/pentest-insights.jar
# Expose the app port
EXPOSE 8000
# Execute the java executable jar as an entrypoint
ENTRYPOINT ["java", "-jar", "pentest-insights.jar"]
###################################################################