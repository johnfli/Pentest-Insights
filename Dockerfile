FROM maven:3.6.3-adoptopenjdk-11
# Developer Info
MAINTAINER Ioannis Flionis <iflionis@auth.gr>
# Change working directory
WORKDIR /pentest-insights
# Disable terminal dialogs
ENV DEBIAN_FRONTEND=noninteractive
# Update
RUN apt-get update
# Install curl
RUN apt-get install -y curl \
  && apt-get install -y wget
# Install NodeJs v.12
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash
RUN apt-get install -y nodejs
## Download and install Maven
## 1- Define a constant with the version of maven you want to install
#ARG MAVEN_VERSION=3.6.3
## 2- Define a constant with the working directory
#ARG USER_HOME_DIR="/root"
## 3- Define the SHA key to validate the maven download
#ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
## 4- Define the URL where maven can be downloaded from
#ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
## 5- Create the directories, download maven, validate the download, install it, remove downloaded file and set links
#RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
#  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
#  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
#  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
#  && rm -f /tmp/apache-maven.tar.gz \
#  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
## 6- Define environmental variables required by Maven, like Maven_Home directory and where the maven repo is located
#ENV MAVEN_HOME /usr/share/maven
#ENV M2_HOME /usr/share/maven
#ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"
#==============================================================================
# Google Chrome (from https://hub.docker.com/r/selenium/node-chrome/dockerfile)
#==============================================================================
ARG CHROME_VERSION="google-chrome-stable"
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
  && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list \
  && apt-get update -qqy \
  && apt-get -qqy install ${CHROME_VERSION:-google-chrome-stable} \
  && rm /etc/apt/sources.list.d/google-chrome.list \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

#==============================================================================
# Firefox (from https://hub.docker.com/r/selenium/node-firefox/dockerfile)
#==============================================================================
ARG FIREFOX_VERSION=76.0.1
RUN apt-get update -qqy \
  && apt-get -qqy --no-install-recommends install firefox \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \
  && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \
  && apt-get -y purge firefox \
  && rm -rf /opt/firefox \
  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
  && rm /tmp/firefox.tar.bz2 \
  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \
  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox
# Copy the code to the container
COPY . /pentest-insights
WORKDIR /pentest-insights/security-project
RUN mvn -Dmaven.test.skip=true clean install
WORKDIR /pentest-insights
# Package application code
RUN mvn -Dmaven.test.skip=true clean install \
  && mvn clean package -Pproduction \
  && cp /pentest-insights/target/my-business-2.0-SNAPSHOT.jar /pentest-insights/pentest-insights.jar
# Expose port
EXPOSE 8000
# Spin the app
ENTRYPOINT ["java", "-jar", "pentest-insights.jar"]
####################################################################
#########################   S T A G E   1   ########################
####################################################################
#####################   M A V E N   B U I L D   ####################
####################################################################
## The first stage of the build will use a maven 3.6.3 parent image
#FROM maven:3.6.3-adoptopenjdk-11 AS MAVEN_BUILD
## Update
#RUN apt-get update
## Install curl
#RUN apt-get install curl
## Install NodeJs v.12
#RUN curl -sL https://deb.nodesource.com/setup_12.x | bash
#RUN apt-get install -y nodejs
## confirm that it was successful
#RUN node -v && npm -v
## npm should have been installed automatically
#WORKDIR /pentest-insights
## Copy the code to the container
#COPY . /pentest-insights
## package application code
#RUN mvn clean package -Pproduction
####################################################################
#########################   S T A G E   2   ########################
####################################################################
######################   D E P L O Y   A P P   #####################
####################################################################
## the trird stage of the build will use open jdk 13
#FROM openjdk:13.0.2-jdk-buster AS DEPLOY_APP
##
#MAINTAINER Ioannis Flionis <iflionis@auth.gr>
## Update
#RUN apt-get update
## Install curl
#RUN apt-get install curl
## Downloading and installing Maven
## 1- Define a constant with the version of maven you want to install
#ARG MAVEN_VERSION=3.6.3
## 2- Define a constant with the working directory
#ARG USER_HOME_DIR="/root"
## 3- Define the SHA key to validate the maven download
#ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
## 4- Define the URL where maven can be downloaded from
#ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
## 5- Create the directories, download maven, validate the download, install it, remove downloaded file and set links
#RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
#  && echo "Downlaoding maven" \
#  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
#  \
#  && echo "Checking download hash" \
#  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
#  \
#  && echo "Unziping maven" \
#  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
#  \
#  && echo "Cleaning and setting links" \
#  && rm -f /tmp/apache-maven.tar.gz \
#  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
## 6- Define environmental variables required by Maven, like Maven_Home directory and where the maven repo is located
#ENV MAVEN_HOME /usr/share/maven
#ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"
## Install NodeJs v.12
#RUN curl -sL https://deb.nodesource.com/setup_12.x | bash
#RUN apt-get install -y nodejs
##==============================================================================
## Google Chrome (from https://hub.docker.com/r/selenium/node-chrome/dockerfile)
##==============================================================================
#ARG CHROME_VERSION="google-chrome-stable"
#RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
#  && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list \
#  && apt-get update -qqy \
#  && apt-get -qqy install ${CHROME_VERSION:-google-chrome-stable} \
#  && rm /etc/apt/sources.list.d/google-chrome.list \
#  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*
##==============================================================================
## Firefox (from https://hub.docker.com/r/selenium/node-firefox/dockerfile)
##==============================================================================
#ARG FIREFOX_VERSION=76.0.1
#RUN apt-get update -qqy \
##  && apt-get -qqy --no-install-recommends install firefox \
##  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \
#  && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \
##  && apt-get -y purge firefox \
##  && rm -rf /opt/firefox \
#  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
#  && rm /tmp/firefox.tar.bz2 \
#  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \
#  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox
#
#WORKDIR /pentest-insights
## copy only the artifacts we need from the second stage and discard the rest
#COPY --from=MAVEN_BUILD /pentest-insights /pentest-insights
#COPY --from=MAVEN_BUILD /pentest-insights/target/my-business-2.0-SNAPSHOT.jar /pentest-insights/pentest-insights.jar
##COPY ./ /pentest-insights
##COPY ./target/my-business-2.0-SNAPSHOT.jar /pentest-insights/pentest-insights.jar
#
#EXPOSE 8000
#
#ENTRYPOINT ["java", "-jar", "pentest-insights.jar"]
####################################################################