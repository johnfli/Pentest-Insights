package securityMicroservice;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import static org.testng.Assert.assertTrue;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class FunctionalTest {

    public static WebDriver driver;

    public static Map<String, Object> vars;

    JavascriptExecutor js;

    @BeforeClass
    public void setUp() {
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        // Get Configuration Properties from the equivalent (config.properties) file
        PropertiesFile.readPropertiesFile();
        // Initialize Web Driver
        driver = WebDrivers.getWebDriver();
        // If not on Windows a new ZAP instance will be initiated
        ZAP.startZAP("http://192.168.195.128/bodgeit/");
    }

    @AfterClass
    public void tearDown() {
        driver.quit();
        // Scans the App through ZAP
        ZAP.runSecurityScans();
        // Terminate ZAP Instance
        ZAP.stopZAP();
    }

    @Test(priority = 1)
    public void cleanUpAndSetUp() {
        vars.put("test_website_url", "http://192.168.195.128/bodgeit/");
        vars.put("user_email", "selenium.24@test.gr");
        vars.put("user_password", "pass123");
        vars.put("feedback_text", "Feedback Check");
        vars.put("search_text", "Search Check");
    }

    @Test(priority = 2)
    public void register() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Login")).click();
        driver.findElement(By.linkText("Register")).click();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys(vars.get("user_email").toString());
        driver.findElement(By.id("password1")).sendKeys(vars.get("user_password").toString());
        driver.findElement(By.id("password2")).sendKeys(vars.get("user_password").toString());
        driver.findElement(By.id("submit")).click();
        /*
		 * Automated software altered this assertThat() invocation into an assertTrue() instead
		 * Automated software altered this vars.get() invocation into a non quoted one 
		 */
        assertTrue(driver.findElement(By.cssSelector("tr:nth-child(1) > td:nth-child(3)")).getText().contains("User: " + vars.get("user_email").toString()));;
    }

    @Test(priority = 3)
    public void addItemsToBasket() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Doodahs")).click();
        driver.findElement(By.linkText("Bonzo dog doo dah")).click();
        driver.findElement(By.id("submit")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("Your Basket"));
        driver.findElement(By.linkText("Thingamajigs")).click();
        driver.findElement(By.linkText("TGJ ABB")).click();
        driver.findElement(By.cssSelector("a:nth-child(3) > img")).click();
        driver.findElement(By.id("submit")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("Your Basket"));
        driver.findElement(By.linkText("Whatsits")).click();
        driver.findElement(By.linkText("Whatsit feel like")).click();
        driver.findElement(By.cssSelector("a:nth-child(1) > img")).click();
        driver.findElement(By.cssSelector("a:nth-child(1) > img")).click();
        driver.findElement(By.cssSelector("a:nth-child(3) > img")).click();
        driver.findElement(By.cssSelector("a:nth-child(3) > img")).click();
        driver.findElement(By.id("submit")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("Your Basket"));
    }

    @Test(priority = 4)
    public void viewBasket() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Your Basket")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("Your Basket"));
    }

    @Test(priority = 5)
    public void updateBasket() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Your Basket")).click();
        driver.findElement(By.cssSelector("tr:nth-child(3) > td > a:nth-child(1) > img")).click();
        driver.findElement(By.cssSelector("tr:nth-child(4) a:nth-child(3) > img")).click();
        driver.findElement(By.id("update")).click();
        assertTrue(driver.findElement(By.cssSelector("p")).getText().contains("Your basket had been updated."));
    }

    @Test(priority = 6)
    public void aboutUs() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("About Us")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("About Us"));
    }

    @Test(priority = 7)
    public void scoringPage() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("About Us")).click();
        driver.findElement(By.linkText("Scoring page")).click();
        assertTrue(driver.findElement(By.cssSelector("h3")).getText().contains("Your Score"));
    }

    @Test(priority = 8)
    public void contactUs() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Contact Us")).click();
        driver.findElement(By.id("comments")).click();
        driver.findElement(By.id("comments")).sendKeys(vars.get("feedback_text").toString());
        driver.findElement(By.id("submit")).click();
        assertTrue(driver.findElement(By.cssSelector("p")).getText().contains("Thank you for your feedback:"));
        /*
		 * Automated software altered this assertThat() invocation into an assertTrue() instead
		 * Automated software altered this vars.get() invocation into a non quoted one 
		 */
        assertTrue(driver.findElement(By.cssSelector("center:nth-child(5) td")).getText().contains(vars.get("feedback_text").toString()));;
    }

    @Test(priority = 9)
    public void search() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Search")).click();
        driver.findElement(By.name("q")).click();
        driver.findElement(By.name("q")).sendKeys(vars.get("search_text").toString());
        driver.findElement(By.cssSelector("tr:nth-child(2) input")).click();
        assertTrue(driver.findElement(By.cssSelector("font > b")).getText().contains("You searched for:"));
    }

    @Test(priority = 10)
    public void logout() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Logout")).click();
        assertTrue(driver.findElement(By.cssSelector("p")).getText().contains("Thank you for your custom."));
        assertTrue(driver.findElement(By.cssSelector("tr:nth-child(1) > td:nth-child(3)")).getText().contains("Guest user"));
    }

    @Test(priority = 11)
    public void login() {
        driver.get("http://192.168.195.128/bodgeit/");
        driver.manage().window().setSize(new Dimension(1376, 744));
        driver.findElement(By.linkText("Login")).click();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys(vars.get("user_email").toString());
        driver.findElement(By.id("password")).sendKeys(vars.get("user_password").toString());
        driver.findElement(By.id("submit")).click();
        /*
		 * Automated software altered this assertThat() invocation into an assertTrue() instead
		 * Automated software altered this vars.get() invocation into a non quoted one 
		 */
        assertTrue(driver.findElement(By.cssSelector(".border > tbody > tr:nth-child(1) > td:nth-child(2)")).getText().contains("You have logged in successfully: " + vars.get("user_email").toString()));;
    }

    @Test(priority = 12)
    public void done() {
    }
}
