package securityMicroservice;

import java.io.FileInputStream;
import java.util.Properties;

public class PropertiesFile {
	
	private static final Properties prop = new Properties();

	public static void readPropertiesFile() {
		try {
			FileInputStream inputStream = new FileInputStream("src/test/resources/config.properties");
			prop.load(inputStream);
			inputStream.close();

			// Input Browser Type
			WebDrivers.browserName = prop.getProperty("browser");
			// Input if Headless or not
			String mode = prop.getProperty("headlessEnabled");
			WebDrivers.headlessMode = mode.equalsIgnoreCase("ON");
			// Input ZAP configuration settings
			ZAP.ZAP_HOST_IP = prop.getProperty("ZAP_HOST_IP");
			ZAP.ZAP_HOST_PORT = prop.getProperty("ZAP_HOST_PORT");

			String os = System.getProperty("os.name").toLowerCase();
			if( !(os.contains("win"))) {
				ZAP.ZAP_API_KEY = prop.getProperty("LINUX_ZAP_API_KEY");
				ZAP.ZAP_INSTALLATION_PATH = prop.getProperty("LINUX_ZAP_INSTALLATION_PATH");
			} else {					
				ZAP.ZAP_API_KEY = prop.getProperty("WIN_ZAP_API_KEY");
				ZAP.ZAP_INSTALLATION_PATH = prop.getProperty("WIN_ZAP_INSTALLATION_PATH");
			}
			// Input ZAP options to run
			mode = prop.getProperty("daemonModeEnabled");
			ZAP.daemonModeEnabled = mode.equalsIgnoreCase("ON");

			mode = prop.getProperty("apiKeyEnabled");
			ZAP.apiKeyEnabled = mode.equalsIgnoreCase("ON");
			
			mode = prop.getProperty("ajaxSpiderEnabled");
			ZAP.ajaxSpiderEnabled = mode.equalsIgnoreCase("ON");

			mode = prop.getProperty("spiderEnabled");
			ZAP.spiderEnabled = mode.equalsIgnoreCase("ON");
			
			mode = prop.getProperty("passiveScanEnabled");
			ZAP.passiveScanEnabled = mode.equalsIgnoreCase("ON");
			
			mode = prop.getProperty("activeScanEnabled");
			ZAP.activeScanEnabled = mode.equalsIgnoreCase("ON");

			mode = prop.getProperty("htmlReportEnabled");
			ZAP.htmlReportEnabled = mode.equalsIgnoreCase("ON");

			mode = prop.getProperty("jsonReportEnabled");
			ZAP.jsonReportEnabled = mode.equalsIgnoreCase("ON");
			
		} catch (Exception e) {
			System.out.println("Problem reading config.properties file: " + e);
			e.printStackTrace();
		}
	}
}
