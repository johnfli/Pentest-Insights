package securityMicroservice;

import java.util.concurrent.TimeUnit;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.Proxy;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.ie.InternetExplorerOptions;
import org.openqa.selenium.remote.BrowserType;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

import io.github.bonigarcia.wdm.WebDriverManager;

public class WebDrivers {

	public static String browserName;
	public static boolean headlessMode;
	public static WebDriver driver;
    private static Logger logger = LogManager.getLogger(WebDrivers.class);

	public static WebDriver getWebDriver() {

		if (browserName.equalsIgnoreCase(BrowserType.CHROME) ) {

			logger.info("Starting Chrome Browser...");
			// Setup the Chrome Driver from Boni Garcia's WebDriverManager
			WebDriverManager.chromedriver().setup();
			// Create a new Chrome Driver with the Proxy Configurations need to run through ZAP
			driver = new ChromeDriver(chromeConfiguration(headlessMode));

		} else if (browserName.equalsIgnoreCase(BrowserType.FIREFOX)) {

			logger.info("Starting Firefox Browser...");

			// Setup the Firefox Driver from Boni Garcia's WebDriverManager
			WebDriverManager.firefoxdriver().setup();

			driver = new FirefoxDriver(FirefoxConfiguration(headlessMode));

		} else if (browserName.equalsIgnoreCase(BrowserType.EDGE)) {

			logger.info("Starting Edge Browser...");

			// Setup the Edge Driver from Boni Garcia's WebDriverManager
			WebDriverManager.edgedriver().setup();

			driver = new EdgeDriver(edgeConfiguration(headlessMode));

		} else if (browserName.equalsIgnoreCase(BrowserType.IE)) {

			logger.info("Starting Internet Explorer Browser...");

			// Setup the Internet Explorer Driver from Boni Garcia's WebDriverManager
			WebDriverManager.iedriver().setup();


			driver = new InternetExplorerDriver(ieConfiguration(headlessMode));

		}
		// Set the timeout duration to 30 seconds
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

		return driver;
	}

	public static DesiredCapabilities getDesiredCapabilities(Proxy proxy) {

		// Set Desired Capabilities 
		DesiredCapabilities capabilities = new DesiredCapabilities(); 
		capabilities.setCapability(CapabilityType.PROXY, proxy); 
		capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 
		capabilities.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true); 

		return capabilities;

	}

	public static ChromeOptions chromeConfiguration(boolean headless) {

		// Set Chrome Options
		ChromeOptions chromeOptions = new ChromeOptions(); 
		chromeOptions.addArguments("--ignore-certificate-errors");

		if (headless) {
			chromeOptions.addArguments("--headless --hide-scrollbars --disable-gpu");
		}

		// Merge chrome options with desired capabilities
		chromeOptions.merge(getDesiredCapabilities(ZAP.getProxyConfiguration()));

		// Return the configured chrome options
		return chromeOptions;
	}

	public static FirefoxOptions FirefoxConfiguration(boolean headless) {

		FirefoxOptions options = new FirefoxOptions();
		DesiredCapabilities capabilities = getDesiredCapabilities(ZAP.getProxyConfiguration());
		options.setHeadless(headless);
		options.merge(capabilities);

		return options;
	}

	public static EdgeOptions edgeConfiguration(boolean headless) {

		EdgeOptions options = new EdgeOptions();
		DesiredCapabilities capabilities = getDesiredCapabilities(ZAP.getProxyConfiguration());

		if (headless)
			logger.info("CAUTION: Edge does not support headless mode. Running on GUI mode.");

		options.merge(capabilities);

		return options;
	}

	public static InternetExplorerOptions ieConfiguration(boolean headless) {

		InternetExplorerOptions options = new InternetExplorerOptions();
		DesiredCapabilities capabilities = getDesiredCapabilities(ZAP.getProxyConfiguration());

		if (headless)
			logger.info("CAUTION: IE does not support headless mode. Running on GUI mode.");

		options.merge(capabilities);

		return options;

	}
}
